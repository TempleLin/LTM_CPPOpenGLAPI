#pragma once
#define API_VERSION @CMAKE_PROJECT_VERSION@
#define TESTING_VERSION @TESTING_VERSION@

#cmakedefine SHOW_API_VERSION "@SHOW_API_VERSION@"
#cmakedefine SHOW_TESTING_VERSION "@SHOW_TESTING_VERSION@"
#cmakedefine API_TESTING_VER_COMPARE_MESSAGE "@API_TESTING_VER_COMPARE_MESSAGE@"

#cmakedefine PROJECT_SOURCE_FOLDERPATH "@PROJECT_SOURCE_FOLDERPATH@/src/"
#cmakedefine PROJECT_SOURCE_RELATIVEPATH "@PROJECT_SOURCE_RELATIVEPATH@/"


#include <iostream>

#define CHECK_CONFIGS_FROM_CMAKE() checkConfigsFromCMake()

#ifdef CMAKE_CHECK_CONFIGS
void checkConfigsFromCMake(){
#ifdef SHOW_API_VERSION
    #ifndef API_VERSION
        std::cout << "ERROR: Set to show API version but version not defined in config." << "\n";
    #else
        std::cout << SHOW_API_VERSION << API_VERSION << "\n";
    #endif
#endif
#ifdef SHOW_TESTING_VERSION
    #ifndef TESTING_VERSION
        std::cout << "ERROR: Set to show Unit Testing version but version not defined in config." << "\n";
    #else
        std::cout << SHOW_TESTING_VERSION << TESTING_VERSION << "\n";
    #endif
#endif
#ifdef API_TESTING_VER_COMPARE_MESSAGE
    std::cout << API_TESTING_VER_COMPARE_MESSAGE << "\n";
#endif
#ifndef PROJECT_SOURCE_FOLDERPATH
    std::cout << "WARNING: Project source folderpath not defined in config. Files might not load properly in program." << "\n";
#endif
    std::cout << "---------------------------------------------------------------\n" << std::endl;
}
#else
inline void checkConfigsFromCMake(){
    std::cout << "ERROR: CMAKE_CHECK_CONFIGS macro not defined. Can't check configs." << "\n";
}
#endif